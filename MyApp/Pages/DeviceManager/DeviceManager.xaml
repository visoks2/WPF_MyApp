<domain:UCBase
             xmlns:domain="clr-namespace:MyApp.Domain"
             xmlns:conv="clr-namespace:MyApp.Converters"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MyApp.Pages.DeviceManager"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
             xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             xmlns:my="clr-namespace:MyApp.Pages.DeviceManager"
             xmlns:showmethexaml="clr-namespace:ShowMeTheXAML;assembly=ShowMeTheXAML"
             xmlns:ConnectionManager="clr-namespace:MyApp.Pages.DeviceManager.ConnectionManager"
             x:Class="MyApp.Pages.DeviceManager.DeviceManager"
             mc:Ignorable="d" 
             d:DesignHeight="450"
             d:DesignWidth="800" >

    <domain:UCBase.Resources>
        
        <!--How to sort Ccombobox items-->
        <!--<CollectionViewSource Source="{Binding Path=BaudRates}" x:Key="cvs">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        ItemsSource="{Binding Source={StaticResource cvs}}"/>-->
        
    </domain:UCBase.Resources>


    <domain:UCBase.DataContext>
        <my:DeviceManagerViewModel x:Name="DeviceManagerViewModel"/>
    </domain:UCBase.DataContext>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="132"/>
        </Grid.ColumnDefinitions>


        <StackPanel DockPanel.Dock="Right" 
            Margin="16 16 0 0"
            Width="100" 
            Grid.Column="1">
            <ConnectionManager:ConnectionManager x:Name="connectionManager"/>
            <Button  
                Margin="0 16 0 0"
                Content="Start"
                IsEnabled="{Binding Source={x:Reference connectionManager}, Path=DataContext.IsConnected}"
                Command = "{Binding StartComand}" >
            </Button>
        </StackPanel>

        <ScrollViewer >
            <DataGrid ItemsSource="{Binding Items3}" 
                CanUserSortColumns="True" 
                CanUserAddRows="True" 
                AutoGenerateColumns="False"
                materialDesign:DataGridAssist.CellPadding="13 8 8 8"
                materialDesign:DataGridAssist.ColumnHeaderPadding="8" >
                <DataGrid.Columns>
                    <!-- Column IsSlected -->
                    <DataGridCheckBoxColumn Binding="{Binding IsSelected}" 
                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                        <DataGridCheckBoxColumn.Header>
                            <!--padding to allow hit test to pass thru for sorting -->
                            <Border Background="Transparent" 
                                    Padding="6 0 6 0" 
                                    HorizontalAlignment="Center">
                                <CheckBox HorizontalAlignment="Center"
                                    DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    IsChecked="{Binding IsAllItems3Selected}" />
                            </Border>
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding Code}"
                                Header="Code"
                                                                    
                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}" />
                    <!-- Column Command -->
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding Command}"
                                                        Header="Command"
                                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />
                    <!-- Column Description -->
                    <materialDesign:MaterialDataGridTextColumn Binding="{Binding Description}"
                                                        Header="Description"
                                                        MaxLength="255" 
                                                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}" />

                    <!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo -->
                    <!--<materialDesign:MaterialDataGridComboBoxColumn Header="Food"
                                                            SelectedValueBinding="{Binding Food}"
                                                            ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}" />-->
                    <!-- Column Frequency -->
                    <materialDesign:MaterialDataGridTextColumn x:Name="GridColumn_Frequency"
                                                Binding="{Binding Frequency}"
                                                Header="Frequency"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                        <materialDesign:MaterialDataGridTextColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding}" TextAlignment="Right"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </materialDesign:MaterialDataGridTextColumn.HeaderStyle>
                        <materialDesign:MaterialDataGridTextColumn.ElementStyle>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Right" />
                            </Style>
                        </materialDesign:MaterialDataGridTextColumn.ElementStyle>
                    </materialDesign:MaterialDataGridTextColumn>

                </DataGrid.Columns>
            </DataGrid>
        </ScrollViewer>
    </Grid>
</domain:UCBase>
